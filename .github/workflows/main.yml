name: Main

on: [push, pull_request]

jobs:
  Linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Lint w/ Black
        uses: lgeiger/black-action@v1.0.1
        with:
          args: ariadne_extended --check

  Tests:
    needs: Linting
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        python-version: [3.8]
        django-version: [2.2.23, 3.1.11]
        drf-version: [3.11.2, 3.12.1]

    steps:
      - uses: actions/checkout@v1

      - name: Setup Postgresql
        uses: harmon758/postgresql-action@v1
        with:
          postgresql version: "11.6-alpine"
          postgresql db: "ariadne_extended"
          postgresql user: "runner"

      - name: "Install Python ${{ matrix.python-version }}"
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: "Install Poetry"
        uses: Gr1N/setup-poetry@v4
        with:
          poetry-version: 1.1.4

      - uses: actions/cache@v1
        id: cache
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: |
            ${{ runner.os }}-py${{ matrix.python-version }}-poetry-${{ hashFiles('poetry.lock') }}-dj${{ matrix.django-version }}-drf${{ matrix.drf-version }}
          restore-keys: |
            ${{ runner.os }}-py${{ matrix.python-version }}-poetry-${{ hashFiles('poetry.lock') }}

      - name: Install requirements
        if: steps.cache.outputs.cache-hit != 'true'
        run: poetry install

      - name: Install Django ${{ matrix.django-version }}, DRF ${{ matrix.drf-version }}
        if: steps.cache.outputs.cache-hit != 'true'
        run: poetry run pip install django==${{ matrix.django-version }} djangorestframework==${{ matrix.drf-version }}

      - name: Test
        run: poetry run pytest
